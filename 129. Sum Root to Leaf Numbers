/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void hello(TreeNode* root, string &s, vector<string> &ans){
        if(root == NULL){
            return;
        }
        
        string temp = to_string(root->val);
        s += temp;

        if (!root->left && !root->right) {
            ans.push_back(s);
        } else {
            hello(root->left, s, ans);
            hello(root->right, s, ans);
        }

        s.erase(s.size() - temp.size());
    }

    int sumNumbers(TreeNode* root) {
        vector<string> ans;
        string s = "";

        hello(root, s, ans);

        int res = 0;

        for(auto i : ans){
            res += stoi(i);
        }

        return res;
    }
};
