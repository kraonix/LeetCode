/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
public:
    void hello(TreeNode* root, int targetSum, int& temp, vector<bool>& ans) {
        if (root == NULL) {
            return;
        }

        temp += root->val;

        if (root->left == NULL && root->right == NULL) {
            if (targetSum == temp) {
                ans.push_back(true);
            }
        } else {

            hello(root->left, targetSum, temp, ans);
            hello(root->right, targetSum, temp, ans);
        }
        temp -= root->val;
    }

    bool hasPathSum(TreeNode* root, int targetSum) {
        int temp = 0;
        vector<bool> ans;

        hello(root, targetSum, temp, ans);

        for (auto i : ans) {
            if (i == true) {
                return true;
            }
        }
        return false;
    }
};
