class Solution {
public:
    vector<int> findMissingAndRepeatedValues(vector<vector<int>>& grid) {
        vector<int> temp;

        for (int i = 0; i < grid.size(); i++) {
            for (int j = 0; j < grid[i].size(); j++) {
                temp.push_back(grid[i][j]);
            }
        }

        unordered_map<int, int> freq;
        for(auto i : temp){
            freq[i]++;
        }

        int repeat = 0;
        for(auto i : freq){
            if(i.second > 1){
                repeat = i.first;
                break;
            }
        }

        int sum = accumulate(temp.begin(), temp.end(), 0) - repeat;
        int n = temp.size();

        int missing = (n*(n + 1)/2) - sum;

        return {repeat, missing};
    }
};
