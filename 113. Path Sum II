/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void hello(TreeNode* root, int targetSum, int &temp, vector<int> &ans, vector<vector<int>> &sol){
        if(root == NULL){
            return;
        }

        temp += root->val;
        ans.push_back(root->val);

        if(root->left == NULL && root->right == NULL){
            if(temp == targetSum){
                sol.push_back(ans);
            }
        }else{
            hello(root->left, targetSum, temp, ans, sol);
            hello(root->right, targetSum, temp, ans, sol);
        }

        temp -= root->val;
        ans.pop_back();
    }

    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>> sol;
        vector<int> ans;
        int temp = 0;

        hello(root, targetSum, temp, ans, sol);
        return sol;
    }
};
