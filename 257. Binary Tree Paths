/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void hello(vector<string> &arr, TreeNode* root, string s){
        if(root == NULL){
            return;
        }

        if(!s.empty()){
            s += "->";
        }
        s += to_string(root->val);

        if(root->left == NULL && root->right == NULL){
            arr.push_back(s);
            return;
        }

        hello(arr, root->left, s);
        hello(arr, root->right, s);
    }

    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> arr;
        string s = "";

        hello(arr, root, s);

        return arr;
    }
};

