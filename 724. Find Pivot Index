class Solution {
public:
    int pivotIndex(vector<int>& nums) {
        int a = 0;
        for (int i = 0; i < nums.size(); i++) {
            if (i > 0) {
                a += nums[i - 1];
            }

            int b = 0;

            for (int j = i + 1; j < nums.size(); j++) {
                b += nums[j];
            }

            if (a == b) {
                return i;
            }
        }
        return -1;
    }
};


/Optimized

class Solution {
public:
    int pivotIndex(vector<int>& nums) {
        int sum = accumulate(nums.begin(), nums.end(), 0);

        int left = 0;

        for(int i = 0; i < nums.size(); i++){
            if(2 * left + nums[i] == sum){
                return i;
            }
            left += nums[i];
        }
        return -1;
    }
};
