class Solution {
public:
    int numberOfBeams(vector<string>& bank) {
        int totalBeams = 0, n = bank.size(), prev = 0;
        for(string& s: bank) {
            int curr = count(s.begin(), s.end(), '1');
            if(!curr)
                continue;
            
            totalBeams += prev * curr;
            prev = curr;
        }
        return totalBeams;
    }
};





class Solution {
public:
    int calOnes(string s){
        int ones = 0;
        for(int i = 0; i < s.size(); i++){
            if(s[i] == '1'){
                ones++;
            }
        }
        return ones;
    }

    int numberOfBeams(vector<string>& bank) {
        int laser = 0;

        for(int i = 0; i < bank.size() - 1; i++){
            int ones = calOnes(bank[i]);
            if(ones > 0){
                for(int j = i + 1; j < bank.size(); j++){
                    if(calOnes(bank[j]) > 0){
                        laser += (ones * calOnes(bank[j]));
                        break;
                    }
                }
            }
        }
        return laser;
    }
};
